<Application x:Class="Shashki.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Shashki"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="letter" TargetType="Label">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <Style x:Key="UIPanelButton" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value >
                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,3">
                        <GradientStop Color="#FF4facfe" Offset="1"/>
                        <GradientStop Color="#FF00f2fe" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,3">
                        <GradientStop Color="#FF4facfe" Offset="1"/>
                        <GradientStop Color="#FF00f2fe" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="300" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="30" SnapsToDevicePixels="true">
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                <Border  x:Name="mask" Background="#FF093B78" CornerRadius="30" Margin="3"/>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" TargetName="mask"  Value="Transparent" />
                                <Setter Property="TextBlock.Foreground" TargetName="border"  Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region PlayGroundButton-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="DodgerBlue"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF1E70FF"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF093B78"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,3">
                                            <GradientStop Color="#FF4facfe" Offset="1"/>
                                            <GradientStop Color="#FF00f2fe" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        <!--#region StepIndicator-->
        <Style x:Key="WhiteBorderTriggers" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="Background" Value="{DynamicResource WhiteBigPart}" />
                    <Setter Property="TextBlock.Foreground" Value="Black" />
                    <Setter Property="TextBlock.FontSize" Value="32" />
                    <Setter Property="Padding" Value="35,20, 0, 0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Margin" Value="23"/>
                    <Setter Property="Background" Value="{DynamicResource WhiteSmallPart}" />
                    <Setter Property="TextBlock.Foreground" Value="Gray" />
                    <Setter Property="TextBlock.FontSize" Value="18" />
                    <Setter Property="Padding" Value="35,15, 0, 0" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BlackBorderTriggers" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="Background" Value="{DynamicResource BlackBigPart}" />
                    <Setter Property="TextBlock.Foreground" Value="White" />
                    <Setter Property="TextBlock.FontSize" Value="32" />
                    <Setter Property="Padding" Value="0, 20, 30, 0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Margin" Value="23"/>
                    <Setter Property="Background" Value="{DynamicResource BlackSmallPart}" />
                    <Setter Property="TextBlock.Foreground" Value="Gray" />
                    <Setter Property="TextBlock.FontSize" Value="18" />
                    <Setter Property="Padding" Value="0, 15, 35, 0" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <LinearGradientBrush x:Key="WhiteBigPart" StartPoint="0.499, 0.49" EndPoint="0.5, 0.5" SpreadMethod="Pad">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="White" Offset="0.5"/>
                <GradientStop Color="Transparent" Offset="0.5"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="BlackBigPart" StartPoint="0.499, 0.49" EndPoint="0.5, 0.5" SpreadMethod="Pad">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Transparent" Offset="0.5"/>
                <GradientStop Color="Black" Offset="0.5"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="WhiteSmallPart" StartPoint="0.4992, 0.49" EndPoint="0.5, 0.5" SpreadMethod="Pad">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="White" Offset="0.5"/>
                <GradientStop Color="Transparent" Offset="0.5"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="BlackSmallPart" StartPoint="0.519369, 0.51" EndPoint="0.52, 0.52" SpreadMethod="Pad">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Transparent" Offset="0.5"/>
                <GradientStop Color="Black" Offset="0.5"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="BorderPlayGroundTriggers" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="DodgerBlue"/>
                    <Setter Property="BorderThickness" Value="3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFAAAAAA"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
               
        <!--#endregion-->
    </Application.Resources>
</Application>
